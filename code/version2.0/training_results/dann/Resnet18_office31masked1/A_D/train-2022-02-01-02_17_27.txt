Namespace(arch='resnet18', batch_size=128, bottleneck_dim=256, center_crop=False, data='Office31', data_processing='ours', epochs=50, iters_per_epoch=1000, local=True, local_pretrained_path='/home/junzhin/Project/Summer_project/code/version1.0/pretrained_model_results/Resnet18_office31masked1_newcheckpoint.pth.tar', log='/home/junzhin/Project/Summer_project/code/version2.0/training_results/dann/Resnet18_office31masked1/A_D', lr=0.01, lr_decay=0.75, lr_gamma=0.001, momentum=0.9, per_class_eval=False, phase='train', pretrained=True, print_freq=50, root='/home/junzhin/Project/Summer_project/code/version2.0/data/office31', seed=1, source='A', target='D', trade_off=1.0, weight_decay=0.001, workers=4)
../../../../dann_modified.py:46: UserWarning: You have chosen to seed training. This will turn on the CUDNN deterministic setting, which can slow down your training considerably! You may see unexpected behavior when restarting from checkpoints.
  warnings.warn('You have chosen to seed training. '
=> using pre-trained model 'resnet18'
Epoch: [0][   0/1000]	Time  0.89 ( 0.89)	Data  0.51 ( 0.51)	Loss   4.25 (  4.25)	Cls Acc 3.9 (3.9)	Domain Acc 55.9 (55.9)
Epoch: [0][  50/1000]	Time  0.65 ( 1.55)	Data  0.47 ( 1.37)	Loss   2.84 (  3.27)	Cls Acc 25.8 (16.0)	Domain Acc 96.5 (93.5)
Epoch: [0][ 100/1000]	Time  0.65 ( 1.59)	Data  0.47 ( 1.41)	Loss   2.24 (  2.89)	Cls Acc 45.3 (24.5)	Domain Acc 98.4 (95.7)
Epoch: [0][ 150/1000]	Time  3.43 ( 1.60)	Data  3.24 ( 1.42)	Loss   2.01 (  2.65)	Cls Acc 45.3 (30.0)	Domain Acc 100.0 (96.7)
Epoch: [0][ 200/1000]	Time  0.64 ( 1.60)	Data  0.46 ( 1.41)	Loss   1.79 (  2.46)	Cls Acc 50.8 (34.7)	Domain Acc 99.2 (97.2)
Epoch: [0][ 250/1000]	Time  0.65 ( 1.60)	Data  0.47 ( 1.42)	Loss   1.52 (  2.30)	Cls Acc 61.7 (38.8)	Domain Acc 97.7 (97.5)
Epoch: [0][ 300/1000]	Time  3.41 ( 1.61)	Data  3.23 ( 1.43)	Loss   1.32 (  2.17)	Cls Acc 66.4 (42.1)	Domain Acc 98.8 (97.7)
Epoch: [0][ 350/1000]	Time  0.65 ( 1.60)	Data  0.47 ( 1.42)	Loss   1.31 (  2.06)	Cls Acc 68.8 (45.1)	Domain Acc 96.9 (97.9)
Epoch: [0][ 400/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   1.10 (  1.96)	Cls Acc 74.2 (47.9)	Domain Acc 98.0 (98.0)
Epoch: [0][ 450/1000]	Time  3.49 ( 1.61)	Data  3.31 ( 1.43)	Loss   1.50 (  1.94)	Cls Acc 68.0 (49.9)	Domain Acc 93.4 (96.5)
Epoch: [0][ 500/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   2.43 (  1.91)	Cls Acc 65.6 (51.9)	Domain Acc 76.6 (95.6)
Epoch: [0][ 550/1000]	Time  1.18 ( 1.61)	Data  0.99 ( 1.43)	Loss   1.20 (  1.88)	Cls Acc 78.9 (53.6)	Domain Acc 86.3 (94.2)
Epoch: [0][ 600/1000]	Time  3.49 ( 1.61)	Data  3.31 ( 1.43)	Loss   2.28 (  1.88)	Cls Acc 68.0 (55.0)	Domain Acc 64.8 (92.8)
Epoch: [0][ 650/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   2.11 (  1.88)	Cls Acc 68.0 (56.2)	Domain Acc 55.5 (91.0)
Epoch: [0][ 700/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   2.81 (  1.86)	Cls Acc 69.5 (57.5)	Domain Acc 35.5 (89.6)
Epoch: [0][ 750/1000]	Time  3.46 ( 1.61)	Data  3.28 ( 1.43)	Loss   1.93 (  1.85)	Cls Acc 66.4 (58.6)	Domain Acc 65.6 (88.2)
Epoch: [0][ 800/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   1.35 (  1.86)	Cls Acc 68.0 (59.5)	Domain Acc 88.7 (87.2)
Epoch: [0][ 850/1000]	Time  0.64 ( 1.61)	Data  0.46 ( 1.43)	Loss   1.45 (  1.86)	Cls Acc 85.9 (60.3)	Domain Acc 68.4 (85.9)
Epoch: [0][ 900/1000]	Time  3.40 ( 1.61)	Data  3.22 ( 1.43)	Loss   2.45 (  1.85)	Cls Acc 78.1 (61.1)	Domain Acc 48.8 (85.1)
Epoch: [0][ 950/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   1.82 (  1.86)	Cls Acc 82.0 (61.9)	Domain Acc 52.7 (83.6)
Test: [0/4]	Time  3.252 ( 3.252)	Loss 3.5286e+00 (3.5286e+00)	Acc@1  17.97 ( 17.97)	Acc@5  46.88 ( 46.88)
 * Acc@1 11.446 Acc@5 38.554
acc1 = 11.4, best_acc1 = 11.4
Epoch: [1][   0/1000]	Time  0.27 ( 0.27)	Data  0.09 ( 0.09)	Loss   1.23 (  1.23)	Cls Acc 84.4 (84.4)	Domain Acc 73.4 (73.4)
Epoch: [1][  50/1000]	Time  3.43 ( 1.60)	Data  3.24 ( 1.42)	Loss   1.65 (  1.67)	Cls Acc 78.1 (79.2)	Domain Acc 55.1 (56.6)
Epoch: [1][ 100/1000]	Time  1.17 ( 1.59)	Data  0.99 ( 1.41)	Loss   1.67 (  1.73)	Cls Acc 78.1 (79.1)	Domain Acc 61.7 (55.6)
Epoch: [1][ 150/1000]	Time  0.64 ( 1.60)	Data  0.46 ( 1.42)	Loss   1.83 (  1.78)	Cls Acc 75.8 (79.0)	Domain Acc 54.7 (53.6)
Epoch: [1][ 200/1000]	Time  3.46 ( 1.61)	Data  3.27 ( 1.43)	Loss   1.24 (  1.85)	Cls Acc 82.8 (78.4)	Domain Acc 60.9 (53.2)
Epoch: [1][ 250/1000]	Time  0.65 ( 1.60)	Data  0.47 ( 1.42)	Loss   1.40 (  1.78)	Cls Acc 82.8 (79.2)	Domain Acc 51.6 (52.8)
Epoch: [1][ 300/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   1.72 (  1.70)	Cls Acc 86.7 (80.3)	Domain Acc 42.2 (54.1)
Epoch: [1][ 350/1000]	Time  3.46 ( 1.61)	Data  3.28 ( 1.43)	Loss   1.66 (  1.66)	Cls Acc 80.5 (81.1)	Domain Acc 53.9 (53.8)
Epoch: [1][ 400/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   1.40 (  1.63)	Cls Acc 82.8 (81.6)	Domain Acc 50.4 (53.4)
Epoch: [1][ 450/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   1.48 (  1.59)	Cls Acc 89.8 (82.3)	Domain Acc 43.8 (53.4)
Epoch: [1][ 500/1000]	Time  3.46 ( 1.61)	Data  3.28 ( 1.43)	Loss   1.19 (  1.57)	Cls Acc 91.4 (82.8)	Domain Acc 57.8 (53.5)
Epoch: [1][ 550/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   1.43 (  1.55)	Cls Acc 80.5 (83.2)	Domain Acc 53.1 (53.2)
Epoch: [1][ 600/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   1.12 (  1.52)	Cls Acc 91.4 (83.7)	Domain Acc 61.7 (52.9)
Epoch: [1][ 650/1000]	Time  4.38 ( 1.61)	Data  4.20 ( 1.43)	Loss   1.25 (  1.50)	Cls Acc 88.3 (84.2)	Domain Acc 55.1 (53.0)
Epoch: [1][ 700/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   1.50 (  1.49)	Cls Acc 85.9 (84.6)	Domain Acc 48.4 (52.6)
Epoch: [1][ 750/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   1.54 (  1.48)	Cls Acc 87.5 (84.9)	Domain Acc 52.3 (52.4)
Epoch: [1][ 800/1000]	Time  3.45 ( 1.61)	Data  3.27 ( 1.43)	Loss   1.99 (  1.48)	Cls Acc 83.6 (85.0)	Domain Acc 40.2 (52.3)
Epoch: [1][ 850/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   1.35 (  1.47)	Cls Acc 92.2 (85.3)	Domain Acc 50.0 (52.5)
Epoch: [1][ 900/1000]	Time  0.65 ( 1.61)	Data  0.47 ( 1.43)	Loss   1.12 (  1.45)	Cls Acc 91.4 (85.6)	Domain Acc 50.8 (52.5)
Epoch: [1][ 950/1000]	Time  3.44 ( 1.61)	Data  3.25 ( 1.43)	Loss   1.03 (  1.43)	Cls Acc 93.0 (86.0)	Domain Acc 47.3 (52.6)
Test: [0/4]	Time  3.229 ( 3.229)	Loss 4.0331e+00 (4.0331e+00)	Acc@1  26.56 ( 26.56)	Acc@5  53.12 ( 53.12)
 * Acc@1 16.466 Acc@5 41.767
acc1 = 16.5, best_acc1 = 16.5
Epoch: [2][   0/1000]	Time  0.27 ( 0.27)	Data  0.09 ( 0.09)	Loss   1.06 (  1.06)	Cls Acc 96.1 (96.1)	Domain Acc 45.3 (45.3)
Epoch: [2][  50/1000]	Time  0.65 ( 1.62)	Data  0.47 ( 1.44)	Loss   0.96 (  1.02)	Cls Acc 91.4 (94.3)	Domain Acc 63.3 (52.9)
Epoch: [2][ 100/1000]	Time  3.47 ( 1.62)	Data  3.28 ( 1.44)	Loss   0.85 (  1.00)	Cls Acc 96.9 (94.5)	Domain Acc 65.2 (53.5)
Traceback (most recent call last):
  File "/home/junzhin/Project/Summer_project/code/version2.0/common/utils/data.py", line 12, in __next__
    data = next(self.iter)
  File "/home/junzhin/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 521, in __next__
    data = self._next_data()
  File "/home/junzhin/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 1176, in _next_data
    raise StopIteration
StopIteration

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "../../../../dann_modified.py", line 405, in <module>
    main(args)
  File "../../../../dann_modified.py", line 152, in main
    lr_scheduler, epoch, args)
  File "../../../../dann_modified.py", line 207, in train
    x_t, _ = next(train_target_iter)
  File "/home/junzhin/Project/Summer_project/code/version2.0/common/utils/data.py", line 15, in __next__
    data = next(self.iter)
  File "/home/junzhin/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 521, in __next__
    data = self._next_data()
  File "/home/junzhin/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 1186, in _next_data
    idx, data = self._get_data()
  File "/home/junzhin/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 1152, in _get_data
    success, data = self._try_get_data()
  File "/home/junzhin/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 990, in _try_get_data
    data = self._data_queue.get(timeout=timeout)
  File "/home/junzhin/anaconda3/lib/python3.7/multiprocessing/queues.py", line 104, in get
    if not self._poll(timeout):
  File "/home/junzhin/anaconda3/lib/python3.7/multiprocessing/connection.py", line 257, in poll
    return self._poll(timeout)
  File "/home/junzhin/anaconda3/lib/python3.7/multiprocessing/connection.py", line 414, in _poll
    r = wait([self], timeout)
  File "/home/junzhin/anaconda3/lib/python3.7/multiprocessing/connection.py", line 921, in wait
    ready = selector.select(timeout)
  File "/home/junzhin/anaconda3/lib/python3.7/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
KeyboardInterrupt
