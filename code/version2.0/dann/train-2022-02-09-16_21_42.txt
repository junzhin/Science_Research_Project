Namespace(arch='resnet50', batch_size=32, bottleneck_dim=256, center_crop=False, data='Office31', data_processing='ours', epochs=20, iters_per_epoch=1000, log='dann', lr=0.01, lr_decay=0.75, lr_gamma=0.001, momentum=0.9, per_class_eval=False, phase='train', print_freq=100, root='data/office31', seed=None, source='A', target='W', trade_off=1.0, weight_decay=0.001, workers=2)
=> using pre-trained model 'resnet50'
Epoch: [0][   0/1000]	Time  2.39 ( 2.39)	Data  0.03 ( 0.03)	Loss   4.11 (  4.11)	Cls Acc 3.1 (3.1)	Domain Acc 50.0 (50.0)
Epoch: [0][ 100/1000]	Time  0.38 ( 0.42)	Data  0.11 ( 0.12)	Loss   0.31 (  1.08)	Cls Acc 96.9 (75.9)	Domain Acc 100.0 (96.3)
Epoch: [0][ 200/1000]	Time  0.38 ( 0.41)	Data  0.11 ( 0.12)	Loss   0.18 (  0.70)	Cls Acc 96.9 (84.2)	Domain Acc 100.0 (97.6)
Epoch: [0][ 300/1000]	Time  0.38 ( 0.40)	Data  0.11 ( 0.12)	Loss   0.09 (  0.52)	Cls Acc 100.0 (88.7)	Domain Acc 100.0 (98.2)
Epoch: [0][ 400/1000]	Time  0.38 ( 0.40)	Data  0.11 ( 0.12)	Loss   0.22 (  0.43)	Cls Acc 100.0 (91.4)	Domain Acc 92.2 (97.8)
Epoch: [0][ 500/1000]	Time  0.38 ( 0.40)	Data  0.11 ( 0.12)	Loss   0.56 (  0.44)	Cls Acc 100.0 (93.0)	Domain Acc 82.8 (95.0)
Epoch: [0][ 600/1000]	Time  0.73 ( 0.40)	Data  0.45 ( 0.12)	Loss   0.58 (  0.45)	Cls Acc 100.0 (94.1)	Domain Acc 76.6 (92.5)
Epoch: [0][ 700/1000]	Time  0.38 ( 0.40)	Data  0.11 ( 0.12)	Loss   0.44 (  0.47)	Cls Acc 96.9 (94.9)	Domain Acc 87.5 (89.8)
Epoch: [0][ 800/1000]	Time  0.38 ( 0.40)	Data  0.11 ( 0.12)	Loss   0.54 (  0.50)	Cls Acc 100.0 (95.5)	Domain Acc 79.7 (87.1)
Epoch: [0][ 900/1000]	Time  0.38 ( 0.40)	Data  0.11 ( 0.12)	Loss   0.42 (  0.51)	Cls Acc 100.0 (96.0)	Domain Acc 81.2 (85.3)
Test: [ 0/25]	Time  0.956 ( 0.956)	Loss 1.3968e+00 (1.3968e+00)	Acc@1  53.12 ( 53.12)	Acc@5  87.50 ( 87.50)
 * Acc@1 80.629 Acc@5 94.214
acc1 = 80.6, best_acc1 = 80.6
Epoch: [1][   0/1000]	Time  0.30 ( 0.30)	Data  0.02 ( 0.02)	Loss   0.54 (  0.54)	Cls Acc 100.0 (100.0)	Domain Acc 71.9 (71.9)
Epoch: [1][ 100/1000]	Time  0.38 ( 0.40)	Data  0.11 ( 0.12)	Loss   0.55 (  0.66)	Cls Acc 100.0 (99.8)	Domain Acc 79.7 (65.7)
Epoch: [1][ 200/1000]	Time  0.72 ( 0.40)	Data  0.44 ( 0.13)	Loss   0.83 (  0.70)	Cls Acc 100.0 (99.8)	Domain Acc 54.7 (64.7)
Traceback (most recent call last):
  File "dann.py", line 348, in <module>
    main(args)
  File "dann.py", line 148, in main
    lr_scheduler, epoch, args)
  File "dann.py", line 209, in train
    transfer_loss = domain_adv(f_s, f_t)
  File "/home/junzhin/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/junzhin/Project/Summer_project/code/version2.0/dalib/adaptation/dann.py", line 69, in forward
    d_label_s = torch.ones((f_s.size(0), 1)).to(f_s.device)
KeyboardInterrupt
