Namespace(arch='resnet50', batch_size=32, bottleneck_dim=256, center_crop=False, data='Office31', data_processing='ours', epochs=20, iters_per_epoch=1000, log='logs/dann/Office31_A2W', lr=0.01, lr_decay=0.75, lr_gamma=0.001, momentum=0.9, per_class_eval=False, phase='train', print_freq=50, root='data/office31', seed=1, source='A', target='W', trade_off=1.0, weight_decay=0.001, workers=2)
dann_modified.py:46: UserWarning: You have chosen to seed training. This will turn on the CUDNN deterministic setting, which can slow down your training considerably! You may see unexpected behavior when restarting from checkpoints.
  warnings.warn('You have chosen to seed training. '
Downloading image_list
Downloading https://cloud.tsinghua.edu.cn/seafhttp/files/11ad0c96-23e5-437f-964f-6863c1e52d1c/image_list.zip to data/office31/image_list.zip
  0%|          | 0/12548 [00:00<?, ?it/s]13312it [00:00, 244797.22it/s]           
Extracting data/office31/image_list.zip to data/office31
Downloading amazon
Downloading https://cloud.tsinghua.edu.cn/seafhttp/files/712d03a6-fbd8-4e93-ad1b-846c4c2bcd57/amazon.tgz to data/office31/amazon.tgz
  0%|          | 0/20448768 [00:00<?, ?it/s]  0%|          | 1024/20448768 [00:00<51:36, 6603.75it/s]  0%|          | 14336/20448768 [00:00<08:32, 39898.00it/s]  0%|          | 61440/20448768 [00:00<02:29, 136508.21it/s]  0%|          | 99328/20448768 [00:00<01:42, 197683.04it/s]  1%|          | 132096/20448768 [00:00<01:28, 228593.33it/s]  1%|1         | 205824/20448768 [00:00<00:56, 360583.30it/s]  1%|1         | 299008/20448768 [00:00<00:39, 515446.76it/s]  2%|2         | 431104/20448768 [00:01<00:26, 742068.46it/s]  3%|3         | 659456/20448768 [00:01<00:16, 1168054.56it/s]  5%|4         | 986112/20448768 [00:01<00:11, 1752662.21it/s]  7%|7         | 1475584/20448768 [00:01<00:07, 2655255.00it/s] 11%|#         | 2226176/20448768 [00:01<00:04, 4068270.71it/s] 16%|#6        | 3336192/20448768 [00:01<00:02, 6127305.74it/s] 25%|##4       | 5016576/20448768 [00:01<00:01, 9267151.14it/s] 32%|###1      | 6505472/20448768 [00:01<00:01, 10934046.09it/s] 37%|###7      | 7613440/20448768 [00:01<00:01, 10772284.56it/s] 46%|####6     | 9439232/20448768 [00:02<00:00, 12975468.36it/s] 55%|#####5    | 11262976/20448768 [00:02<00:00, 14528574.98it/s] 64%|######4   | 13111296/20448768 [00:02<00:00, 15648471.00it/s] 73%|#######3  | 14956544/20448768 [00:02<00:00, 16469992.42it/s] 82%|########2 | 16797696/20448768 [00:02<00:00, 17040224.41it/s] 91%|#########1| 18631680/20448768 [00:02<00:00, 17410174.71it/s]100%|#########9| 20433920/20448768 [00:02<00:00, 9758832.13it/s] 20449280it [00:02, 7113243.13it/s]                              
Extracting data/office31/amazon.tgz to data/office31
Downloading dslr
Downloading https://cloud.tsinghua.edu.cn/seafhttp/files/1c546cc9-98be-46e1-b448-caee25d06add/dslr.tgz to data/office31/dslr.tgz
  0%|          | 0/36198413 [00:00<?, ?it/s]  0%|          | 13312/36198413 [00:00<04:50, 124499.86it/s]  0%|          | 26624/36198413 [00:00<06:04, 99128.50it/s]   0%|          | 52224/36198413 [00:00<04:32, 132408.35it/s]  0%|          | 103424/36198413 [00:00<02:26, 246087.48it/s]  0%|          | 154624/36198413 [00:00<01:50, 325308.65it/s]  1%|          | 244736/36198413 [00:00<01:12, 492792.75it/s]  1%|1         | 372736/36198413 [00:00<00:49, 719881.14it/s]  2%|1         | 562176/36198413 [00:00<00:33, 1067822.12it/s]  2%|2         | 856064/36198413 [00:01<00:21, 1617414.88it/s]  4%|3         | 1296384/36198413 [00:01<00:14, 2441773.12it/s]  5%|5         | 1966080/36198413 [00:01<00:09, 3697807.17it/s]  8%|8         | 2981888/36198413 [00:01<00:05, 5601645.26it/s] 12%|#2        | 4484096/36198413 [00:01<00:03, 8403671.05it/s] 19%|#8        | 6720512/36198413 [00:01<00:02, 12546060.28it/s] 28%|##7       | 10109952/36198413 [00:01<00:01, 18888418.84it/s] 38%|###8      | 13783040/36198413 [00:01<00:00, 24213701.57it/s] 49%|####8     | 17640448/36198413 [00:01<00:00, 28357872.90it/s] 58%|#####8    | 21031936/36198413 [00:01<00:00, 29923001.85it/s] 70%|######9   | 25236480/36198413 [00:02<00:00, 33373702.06it/s] 79%|#######8  | 28575744/36198413 [00:02<00:00, 32768794.32it/s] 88%|########8 | 31856640/36198413 [00:02<00:00, 23265602.27it/s]36199424it [00:02, 14984285.43it/s]                              
Extracting data/office31/dslr.tgz to data/office31
Downloading webcam
Downloading https://cloud.tsinghua.edu.cn/seafhttp/files/a9089301-91d1-4c92-8214-6676304edc93/webcam.tgz to data/office31/webcam.tgz
  0%|          | 0/20607702 [00:00<?, ?it/s]  0%|          | 1024/20607702 [00:00<39:29, 8695.30it/s]  0%|          | 14336/20607702 [00:00<07:32, 45514.54it/s]  0%|          | 35840/20607702 [00:00<03:39, 93645.59it/s]  0%|          | 74752/20607702 [00:00<02:07, 161439.05it/s]  1%|          | 126976/20607702 [00:00<01:19, 258950.42it/s]  1%|          | 182272/20607702 [00:00<01:00, 339866.28it/s]  1%|1         | 289792/20607702 [00:00<00:38, 531480.39it/s]  2%|2         | 436224/20607702 [00:01<00:25, 794653.73it/s]  3%|3         | 670720/20607702 [00:01<00:16, 1233560.32it/s]  5%|4         | 1013760/20607702 [00:01<00:10, 1853371.19it/s]  8%|7         | 1552384/20607702 [00:01<00:06, 2861191.67it/s] 11%|#1        | 2338816/20607702 [00:01<00:04, 4313855.70it/s] 17%|#7        | 3510272/20607702 [00:01<00:02, 6487994.86it/s] 25%|##5       | 5233664/20607702 [00:01<00:01, 9659988.31it/s] 38%|###8      | 7888896/20607702 [00:01<00:00, 14672790.89it/s] 57%|#####7    | 11782144/20607702 [00:01<00:00, 21881929.23it/s] 73%|#######3  | 15085568/20607702 [00:01<00:00, 25208634.22it/s] 93%|#########2| 19145728/20607702 [00:02<00:00, 29774946.27it/s]20608000it [00:02, 9913693.74it/s]                               
Extracting data/office31/webcam.tgz to data/office31
=> using pre-trained model 'resnet50'
Epoch: [0][   0/1000]	Time  0.42 ( 0.42)	Data  0.03 ( 0.03)	Loss   4.33 (  4.33)	Cls Acc 3.1 (3.1)	Domain Acc 46.9 (46.9)
Traceback (most recent call last):
  File "dann_modified.py", line 394, in <module>
    main(args)
  File "dann_modified.py", line 152, in main
    lr_scheduler, epoch, args)
  File "dann_modified.py", line 240, in train
    optimizer.step()
  File "/home/junzhin/anaconda3/lib/python3.7/site-packages/torch/optim/lr_scheduler.py", line 65, in wrapper
    return wrapped(*args, **kwargs)
  File "/home/junzhin/anaconda3/lib/python3.7/site-packages/torch/optim/optimizer.py", line 88, in wrapper
    return func(*args, **kwargs)
  File "/home/junzhin/anaconda3/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/home/junzhin/anaconda3/lib/python3.7/site-packages/torch/optim/sgd.py", line 143, in step
    nesterov=nesterov)
  File "/home/junzhin/anaconda3/lib/python3.7/site-packages/torch/optim/_functional.py", line 164, in sgd
    d_p = d_p.add(param, alpha=weight_decay)
KeyboardInterrupt
